import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Link from 'next/link'
import { Button } from '@material-ui/core';
import { useState } from 'react'
import { useEffect } from 'react'
import SearchLocationInput from '../component/LocationSearchInput'

const Query: NextPage = () => {

 
    const [lat, setLat] = useState<number>();
    const [lng, setLng] = useState<number>();


    useEffect(() => {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition((position: GeolocationPosition) => {
                const pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude,
                };    
                console.log(pos);
                setLat(pos.lat);
                setLng(pos.lng);
            },
            () => {
                console.log("No geolocation provided");
            });
        }
        else {
            console.log("No geolocation provided");
        }
    }, [])

  /**
   * figure out state management in nextjs
   * 
   *
   * location (ask for current, or address, town) // other fields are disabled until this field
   * google places api ^
   * 
   * after location, yelp categories appear, select as many (or optional)
   * price option field
   * 
   * Then go to next page with fields, query and pick data. 
   * User can select another restaurant by random button
   */

   return (
        <div className={styles.container}>
            <Head>
                <title>BoneAppleTeeth</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>
                    Let&apos;s get you a <a>place to eat</a>
                </h1>

                <div className={styles.grid}>
                    <SearchLocationInput lat={lat} lng={lng} setLng={setLng} setLat={setLat}/>
                </div>

                <div className={styles.queryButton}>
                    <Link href={{
                        pathname: '/result',
                        query: {
                            lat: lat,
                            lng: lng
                        }
                    }} passHref>
                        <Button variant="contained" color="primary" disabled>
                        Let&apos;s begin
                        </Button>
                    </Link>
                </div>


        

            </main>

            <footer className={styles.footer}>
                <a
                href="https://github.com/geomin76/boneappleteeth"
                target="_blank"
                rel="noopener noreferrer"
                >
                <span className={styles.logo}>
                    <Image src="/github.svg" alt="Github Logo" width={40} height={40} />
                </span>
                </a>
            </footer>
        </div>
    )
  }

export default Query